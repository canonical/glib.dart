name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
      - run: dart pub get
      - run: dart analyze --fatal-infos .

  compile:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
      - run: dart pub get
      - name: Run dart compile exe
        run: find example/ -name *.dart -exec dart compile exe {} \;

  coverage:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - run: flutter test --coverage
      - uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}

  format:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
      - run: dart pub get
      - run: dart format --set-exit-if-changed .

  pub:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
      - run: dart pub get
      - run: dart pub publish --dry-run

  ubuntu:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
      - run: sudo apt update
      - run: sudo apt install -y libglib2.0-0
      - run: dart pub get
      - run: dart test

  macos:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
      - run: brew install glib
      - run: brew list glib
      - run: dart pub get
      - run: dart test
        env:
          # file system relative paths not allowed in hardened programs
          LIBGLIB_PATH: /usr/local/Cellar/glib/2.74.4/lib/libglib-2.0.dylib

  windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - run: python -m pip install meson ninja
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Cache glib
        id: cache-glib
        uses: actions/cache@v3
        with:
          path: C:\glib
          key: ${{runner.os}}-glib
      - name: Build glib
        if: steps.cache-glib.outputs.cache-hit != 'true'
        run: |
          git clone --depth 1 --branch 2.75.2 https://github.com/GNOME/glib.git
          cd glib
          mkdir _build
          cd _build
          meson .. --prefix=C:\glib
          ninja
          ninja install
      - name: Add glib to PATH
        run: echo "C:\glib\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - uses: dart-lang/setup-dart@v1
      - run: dart pub get
      - run: dart test

  web:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
      - run: dart pub get
      - name: Run dart compile js
        run: find example/ -name *.dart -exec dart compile js {} \;
